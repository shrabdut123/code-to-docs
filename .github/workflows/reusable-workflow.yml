name: Reusable Workflow
on:
  workflow_call:
    inputs:
      src-folder:
        description: 'Source folder of the calling repository'
        required: true
        type: string
      repo-name:
        description: 'Name of the calling repository'
        required: true
        type: string
      branch-name:
        description: 'Branch of the calling repository'
        required: true
        type: string
      token:
        required: true
        type: string  # Ensure token is defined as a string
  workflow_dispatch:
    inputs:
      src-folder:
        description: 'Source folder of the calling repository'
        required: true
        type: string
      repo-name:
        description: 'Name of the calling repository'
        required: true
        type: string
      branch-name:
        description: 'Branch of the calling repository'
        required: true
        type: string
      token:
        required: true
        type: string  # Ensure token is defined as a string
permissions:
  contents: read
  id-token: write
  actions:  read
jobs:
  run-script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Caller Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo-name }}
          ref: ${{ inputs.branch-name }}
          token: ${{ inputs.token }}
          path: repo-caller
      - name: Checkout Callee Repository
        uses: actions/checkout@v4
        with:
          token: ${{ inputs.token }}
          path: repo-callee
      - name: Print Source Folder Path
        run: echo "Source Folder Path ${{ inputs.src-folder }}"

      - name: Debug Repository Structure
        run: ls -R ${{ github.workspace }}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          pip install -r repo-callee/requirements.txt
      - name: Run Python script
        env:
          AZURE_OPENAI_API_KEY: ${{ secrets.AZURE_OPENAI_API_KEY }}  # Pass the secret to the script
          SRC_FOLDER: ${{ github.workspace }}/repo-caller/${{ inputs.src-folder}}
        run: |
          python repo-callee/generate_doc.py
      - name: Commit changes to Caller repository
        run: |
          cd repo-caller
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b update-caller-repo-files-${GITHUB_SHA}-${GITHUB_RUN_NUMBER} # Create a new branch for changes
          git add . # Add modified files
          git commit -m "Modify files in src folder from script"
          git push --set-upstream origin update-caller-repo-files-${GITHUB_SHA}-${GITHUB_RUN_NUMBER} # Push the new branch to Repository A

      - name: Create Pull Request in Caller repository
        run: |
            curl -X POST -H "Authorization: token ${{ inputs.token }}" \
            -d '{
                  "title": "Update files in src folder",
                  "head": "update-caller-repo-files-${GITHUB_SHA}-${GITHUB_RUN_NUMBER}",
                  "base": "main",
                  "body": "Automated pull request to update files in src folder from script."
                }' \
            https://api.github.com/repos/shrabdut123/testSemRepo/pulls
